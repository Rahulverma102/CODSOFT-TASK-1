
import tkinter as tk

class Calculator:
    def __init__(self, root):
        self.root = root
        self.root.title("Digital Calculator")
        self.root.geometry("400x600")
        self.root.resizable(False, False)
        
        self.expression = ""
        
        # Create a StringVar to update the display
        self.display_text = tk.StringVar()
        
        self.create_widgets()
        
    def create_widgets(self):
        # Display
        display_frame = tk.Frame(self.root, height=100, bg="black")
        display_frame.pack(expand=True, fill="both")
        
        display_label = tk.Label(
            display_frame,
            textvariable=self.display_text,
            font=("Helvetica", 40),
            fg="white",
            bg="black",
            anchor="e",
            padx=24
        )
        display_label.pack(expand=True, fill="both")
        
        # Buttons Frame
        buttons_frame = tk.Frame(self.root)
        buttons_frame.pack(expand=True, fill="both")
        
        # Button Layout
        buttons = [
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "C", "0", "=", "+"
        ]
        
        row = 0
        col = 0
        for button in buttons:
            button_command = lambda x=button: self.on_button_click(x)
            tk.Button(
                buttons_frame,
                text=button,
                font=("Helvetica", 24),
                command=button_command,
                height=3,
                width=6
            ).grid(row=row, column=col, sticky=tk.NSEW)
            
            col += 1
            if col > 3:
                col = 0
                row += 1

        # Make buttons expand to fill available space
        for i in range(4):
            buttons_frame.grid_columnconfigure(i, weight=1)
            buttons_frame.grid_rowconfigure(i, weight=1)
    
    def on_button_click(self, button):
        if button == "C":
            self.expression = ""
        elif button == "=":
            try:
                self.expression = str(eval(self.expression))
            except Exception as e:
                self.expression = "Error"
        else:
            self.expression += button
        self.display_text.set(self.expression)

if __name__ == "__main__":
    root = tk.Tk()
    calc = Calculator(root)
    root.mainloop()
